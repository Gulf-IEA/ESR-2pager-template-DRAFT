ggplot2::ggplot(ggplot2::aes_string(...)) +
ggplot2::geom_line() +
ggplot2::geom_point() +
ggplot2::facet_wrap(~region,
nrow = 2) +
ggplot2::xlim(c(1989, NA)) +
ggplot2::theme_bw(base_size = 16) +
ggplot2::theme(legend.position = "bottom",
legend.title = ggplot2::element_blank(),
strip.text = ggplot2::element_text(size = 16),
axis.title.x = ggplot2::element_blank()) +
ggplot2::ylab("Normalized value")
return(fig)
}
compare %>%
compare_norm(x = "year",
y = "norm_value",
color = "name")
head(dat)
head(df_effArea2)
head(swv)
compare <- rbind(df_effArea2,
swv %>%
dplyr::rename(region = name) %>%
dplyr::mutate(name = "swv"))%>%
dplyr::mutate(norm_value = (val - mean)/sd)
compare %>%
compare_norm(x = "year",
y = "norm_value",
color = "name")
cor_plt <- function(data) {}
cor_plt <- function(data,
..., # passed to aes
xlab,
ylab
) {
fig <- data %>%
ggplot2::ggplot(ggplot2::aes(...)) +
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "lm") +
viridis::scale_color_viridis() +
ggplot2::facet_wrap(~region,
scales = "free",
ncol = 1) +
ggplot2::theme_bw(base_size = 16) +
ggplot2::theme(legend.position = "right",
legend.direction = "vertical") +
ggplot2::ylab(ylab) +
ggplot2::xlab(xlab)
return(fig)
}
cor_plt <- function(data,
..., # passed to aes
xlab,
ylab
) {
fig <- data %>%
ggplot2::ggplot(ggplot2::aes_string(...)) +
ggplot2::geom_point() +
ggplot2::geom_smooth(method = "lm") +
viridis::scale_color_viridis() +
ggplot2::facet_wrap(~region,
scales = "free",
ncol = 1) +
ggplot2::theme_bw(base_size = 16) +
ggplot2::theme(legend.position = "right",
legend.direction = "vertical") +
ggplot2::ylab(ylab) +
ggplot2::xlab(xlab)
return(fig)
}
dat %>%
cor_plt(x = swv,
y = eff_area,
color = year,
ylab = "Spring effective area occupied (km2)",
xlab = "Winter shelf water volume (km3)")
dat %>%
cor_plt(x = "swv",
y = "eff_area",
color = "year",
ylab = "Spring effective area occupied (km2)",
xlab = "Winter shelf water volume (km3)")
head(dat)
compare
compare <- rbind(rec,
dat2 %>%
dplyr::rename(region = name) %>%
dplyr::mutate(name = "bottom temperature")) %>%
dplyr::mutate(norm_value = (val - mean)/sd)\
compare <- rbind(rec,
dat2 %>%
dplyr::rename(region = name) %>%
dplyr::mutate(name = "bottom temperature")) %>%
dplyr::mutate(norm_value = (val - mean)/sd)
compare
cor_dat <- compare %>%
dplyr::select(name, val, region, year) %>%
dplyr::mutate(name = ifelse(name == "bottom temperature", "bottom_temp", name)) %>%
tidyr::pivot_wider(names_from = name,
values_from = val)
cor_dat %>%
cor_plt(x = "bottom_temp",
y = "log_recruit_devs",
color = "year",
ylab = "Log recritment deviation",
xlab = "Winter bottom temperature")
knitr::opts_chunk$set(echo = TRUE,
warning = FALSE,
message = FALSE)
`%>%` <- magrittr::`%>%`
dat <- read.csv(here::here("data/bsb_bt_temp_nmab_1959-2022.csv"))
sdat <- read.csv(here::here("data/bsb_bt_temp_smab_1959-2022.csv"))
dat2 <- dat %>%
dplyr::bind_rows(sdat) %>%
dplyr::rename(val = mean,
name = Region) %>%
dplyr::group_by(name) %>%
dplyr::mutate(mean = mean(val),
sd = sd(val)) %>%
dplyr::ungroup()
n_swv <- readxl::read_excel(here::here("data-raw/ShelfWaterVolume_BSB_Update.xlsx"),
sheet = "N. MAB") %>%
janitor::clean_names() %>%
dplyr::select(year,
val = sh_w_vol) %>%
dplyr::mutate(region = "North")
s_swv <- readxl::read_excel(here::here("data-raw/ShelfWaterVolume_BSB_Update.xlsx"),
sheet = "S. MAB") %>%
janitor::clean_names() %>%
dplyr::select(year,
val = sh_w_vol) %>%
dplyr::mutate(region = "South")
swv <- rbind(n_swv,
s_swv) %>%
dplyr::mutate(whole_year = trunc(year),
dec_year = year - whole_year) %>%
dplyr::filter(dec_year < 0.25) %>% # winter only
dplyr::select(-year, -dec_year) %>%
dplyr::rename(year = whole_year,
name = region) %>%
dplyr::group_by(year, name) %>%
dplyr::summarise(new_val = mean(val)) %>%
dplyr::ungroup() %>%
dplyr::group_by(name) %>%
dplyr::mutate(mean = mean (new_val),
sd = sd(new_val)) %>%
dplyr::rename(val = new_val)
n_rec <- read.table(here::here("data-raw/NORTH.MT.2021.FINAL.STD.txt"),
header = TRUE) %>%
dplyr::filter(name == "log_recruit_devs") %>%
dplyr::mutate(year = 1989:2019) %>%
dplyr::rename(val = value)
s_rec <- read.table(here::here("data-raw/SOUTH.MT.2021.FINAL.STD.txt"),
header = TRUE) %>%
dplyr::filter(name == "log_recruit_devs") %>%
dplyr::mutate(year = 1989:2019) %>%
dplyr::rename(val = value)
rec <- rbind(n_rec %>%
dplyr::mutate(region = "North"),
s_rec %>%
dplyr::mutate(region = "South")) %>%
dplyr::group_by(region) %>%
dplyr::mutate(mean = mean(val),
sd = sd(val))
load(here::here("data/from_Alex/parameter_estimates.RData"))
Sdreport_spring <-parameter_estimates$SD
nrow_sd <- length(Sdreport_spring$value)
year<-1989:2021
n_yea <- length(unique(year))
n_surv <- 11
n_stock<-2
df_sdreport_spring <-
data.frame(variable = c(names(Sdreport_spring$value)),
value = c(Sdreport_spring$value),
sd = c(Sdreport_spring$sd),
Season = c(rep("Spring", times = nrow_sd)))
df_effArea_spring <-
df_sdreport_spring %>%
dplyr::filter(variable %in% c("effective_area_ctl"))%>%
dplyr::mutate(Region = rep(c("North", "South"),
times = n_yea*n_surv))%>%
dplyr::mutate(year   = rep(c(1989:2021),
each = 2,
times = 11),
survey   = rep(c(1:11),
each = 66,
times = 1))
#
# df_effArea <- data.frame(variable = names(parameter_estimates$SD$value),
#                          value = parameter_estimates$SD$value,
#                          sd = parameter_estimates$SD$sd) %>%
#   dplyr::filter(variable == "effective_area_ctl") %>%
#   dplyr::mutate(size = rep(c("North", "South"),
#                            times = length(1989:2021)*11),
#                 year = rep(c(1989:2021),
#                            each = 2,
#                            times = 11),
#                 survey = rep(c(1:11),
#                              each = 66)) %>%
#   dplyr::filter(survey == 1)
df_effArea2 <- df_effArea %>%
dplyr::filter(survey == 1) %>%
dplyr::rename(val = value,
region = size) %>%
dplyr::select(val, region, year) %>%
dplyr::group_by(region) %>%
dplyr::mutate(mean = mean(val),
sd = sd(val),
name = "eff_area")
df_cog_spring <-
df_sdreport_spring %>%
dplyr::filter(variable %in% c("mean_Z_ctm"))%>%
dplyr::mutate(variable = rep(c("Eastings", "Northings"),
each = n_yea*n_stock),
Region = rep(c("North", "South"),
each = 1,
times = n_yea*n_stock),
year   = rep(c(1989:2021),
each = 2,
times = 2))
df_cog_spring\
df_cog_spring
head(df_effArea2)
head(df_cog_spring)
df_cog_spring %>%
dplyr::filter(variable == "Northings") %>%
dplyr::rename(region = Region,
val = value) %>%
dplyr::select(-sd) %>%
dplyr::group_by(region) %>%
dplyr::mutate(mean = mean(val),
sd = sd(val)) %>%
time_series_plot(ylab = "Northings (km)") +
ggplot2::facet_wrap(~region,
nrow = 2,
scales = "free_y")
df_cog_spring %>%
dplyr::filter(variable == "Northings") %>%
dplyr::rename(region = Region,
val = value) %>%
dplyr::select(-sd) %>%
dplyr::group_by(region) %>%
dplyr::mutate(mean = mean(val),
sd = sd(val),
name = "northings") %>%
time_series_plot(ylab = "Northings (km)") +
ggplot2::facet_wrap(~region,
nrow = 2,
scales = "free_y")
df_cog_spring <-
df_sdreport_spring %>%
dplyr::filter(variable %in% c("mean_Z_ctm"))%>%
dplyr::mutate(variable = rep(c("Eastings", "Northings"),
each = n_yea*n_stock),
Region = rep(c("North", "South"),
each = 1,
times = n_yea*n_stock),
year   = rep(c(1989:2021),
each = 2,
times = 2)) %>%
dplyr::rename(region = Region,
val = value,
annual_sd = sd) %>%
dplyr::group_by(region, variable) %>%
dplyr::mutate(mean = mean(val),
sd = sd(val),
name = "cog")
head(df_cog_spring)
df_cog_spring %>%
dplyr::filter(variable == "Northings") %>%
time_series_plot(ylab = "Northings (km)") +
ggplot2::geom_ribbon(ggplot2::aes(ymin = val - 1.96*annual_sd,
ymax = val + 1.96*annual_sd)) +
ggplot2::facet_wrap(~region,
nrow = 2,
scales = "free_y"
)
df_cog_spring %>%
dplyr::filter(variable == "Northings") %>%
time_series_plot(ylab = "Northings (km)") +
ggplot2::geom_ribbon(ggplot2::aes(ymin = val - 1.96*annual_sd,
ymax = val + 1.96*annual_sd),
alpha = 0.2) +
ggplot2::facet_wrap(~region,
nrow = 2,
scales = "free_y")
head(df_cog_spring)
df_cog_spring %>%
dplyr::filter(variable == "Northings") %>%
ggplot2::ggplot(ggplot2::aes(x = year,
y = val,
fill = region,
color = region)) +
ggplot2::geom_ribbon(ggplot2::aes(ymin = val - 1.96*annual_sd,
ymax = val + 1.96*annual_sd),
alpha = 0.2) +
ggplot2::geom_point() +
ggplot2::geom_line() +
ggplot2::theme_bw() +
ggplot2::facet_wrap(~region,
nrow = 2,
scales = "free_y")
df_cog_spring %>%
dplyr::filter(variable == "Northings") %>%
ggplot2::ggplot(ggplot2::aes(x = year,
y = val,
fill = region,
color = region)) +
ggplot2::geom_ribbon(ggplot2::aes(ymin = val - 1.96*annual_sd,
ymax = val + 1.96*annual_sd),
alpha = 0.2) +
ggplot2::geom_point() +
ggplot2::geom_line() +
ggplot2::theme_bw()
df_cog_spring %>%
dplyr::filter(variable == "Northings") %>%
ggplot2::ggplot(ggplot2::aes(x = year,
y = val,
fill = region,
color = region)) +
ggplot2::geom_ribbon(ggplot2::aes(ymin = val - 1.96*annual_sd,
ymax = val + 1.96*annual_sd),
alpha = 0.2,
color = NA) +
ggplot2::geom_point() +
ggplot2::geom_line() +
ggplot2::theme_bw()
load(here::here("data/from_Alex/parameter_estimates.RData"))
Sdreport_spring <-parameter_estimates$SD
nrow_sd <- length(Sdreport_spring$value)
year<-1989:2021
n_yea <- length(unique(year))
n_surv <- 11
n_stock<-2
df_sdreport_spring <-
data.frame(variable = c(names(Sdreport_spring$value)),
value = c(Sdreport_spring$value),
sd = c(Sdreport_spring$sd),
Season = c(rep("Spring", times = nrow_sd)))
df_effArea <-
df_sdreport_spring %>%
dplyr::filter(variable %in% c("effective_area_ctl"))%>%
dplyr::mutate(Region = rep(c("North", "South"),
times = n_yea*n_surv))%>%
dplyr::mutate(year   = rep(c(1989:2021),
each = 2,
times = 11),
survey   = rep(c(1:11),
each = 66,
times = 1))
#
# df_effArea <- data.frame(variable = names(parameter_estimates$SD$value),
#                          value = parameter_estimates$SD$value,
#                          sd = parameter_estimates$SD$sd) %>%
#   dplyr::filter(variable == "effective_area_ctl") %>%
#   dplyr::mutate(size = rep(c("North", "South"),
#                            times = length(1989:2021)*11),
#                 year = rep(c(1989:2021),
#                            each = 2,
#                            times = 11),
#                 survey = rep(c(1:11),
#                              each = 66)) %>%
#   dplyr::filter(survey == 1)
df_effArea2 <- df_effArea %>%
dplyr::filter(survey == 1) %>%
dplyr::rename(val = value,
region = Region) %>%
dplyr::select(val, region, year) %>%
dplyr::group_by(region) %>%
dplyr::mutate(mean = mean(val),
sd = sd(val),
name = "eff_area")
head(df_cog_spring)
dat <- dplyr::full_join(df_cog_spring %>%
dplyr::filter(variable == "Northings") %>%
dplyr::select(region, year, val) %>%
dplyr::rename(northings = val),
swv %>%
dplyr::select(-c(mean, sd)) %>%
dplyr::rename(swv = val,
region = name)) %>%
tidyr::drop_na()
dat
dat %>%
cor_plt(x = "swv",
y = "northings",
color = "year",
ylab = "Spring northings (km)",
xlab = "Winter shelf water volume (km3)")
compare <- rbind(df_cog_spring %>%
dplyr::filter(variable == "Northings"),
swv %>%
dplyr::rename(region = name) %>%
dplyr::mutate(name = "swv"))%>%
dplyr::mutate(norm_value = (val - mean)/sd)
compare %>%
compare_norm(x = "year",
y = "norm_value",
color = "name")
head(dat)
test_cor(data = dat,
y1 = "northings",
x = "swv",
alt = "two.sided")
cor_dat %>%
cor_plt(x = "bottom_temp",
y = "log_recruit_devs",
color = "year",
ylab = "Log recritment deviation",
xlab = "Winter bottom temperature") +
ggplot2::theme(legend.position = "bottom")
ggplot2::ggsave(here::here("images", paste0(Sys.Date(), "temp_x_rec2.png")),
width = 5, height = 6)
cor_dat %>%
cor_plt(x = "bottom_temp",
y = "log_recruit_devs",
color = "year",
ylab = "Log recritment deviation",
xlab = "Winter bottom temperature") +
ggplot2::theme(legend.position = "bottom",
legend.direction = "horizontal")
ggplot2::ggsave(here::here("images", paste0(Sys.Date(), "temp_x_rec2.png")),
width = 5, height = 6)
test_cor(data = cor_dat,
x = "bottom_temp",
y1 = "log_recruit_devs",
alt = "two.sided")
cor_dat
test_cor <- function(data, y1, y2 = NULL, x, alt) {
for(i in c("North", "South")) {
message(paste(i, y1))
res <- cor.test(x = data %>%
dplyr::filter(.data$region == i) %>%
dplyr::pull(x),
y = data %>%
dplyr::filter(.data$region == i) %>%
dplyr::pull(y1),
alternative = alt)
out <- tibble::tibble("Region" = i,
"Independent variable" = x,
"Dependent variable" = y1,
"Correlation coefficient" = res$estimate,
"P value" = res$p.value) %>%
t()
out %>%
knitr::kable() %>%
print()
if(!is.null(y2)) {
message(paste(i, y2))
res <- cor.test(x = data %>%
dplyr::filter(.data$region == i) %>%
dplyr::pull(x),
y = data %>%
dplyr::filter(.data$region == i) %>%
dplyr::pull(y2),
alternative = alt)
out <- tibble::tibble("Region" = i,
"Independent variable" = x,
"Dependent variable" = y2,
"Correlation coefficient" = res$estimate,
"P value" = res$p.value) %>%
t()
out %>%
knitr::kable() %>%
print()
}
}
}
compare <- rbind(rec,
dat2 %>%
dplyr::rename(region = name) %>%
dplyr::mutate(name = "bottom temperature")) %>%
dplyr::mutate(norm_value = (val - mean)/sd)
cor_dat <- compare %>%
dplyr::select(name, val, region, year) %>%
dplyr::mutate(name = ifelse(name == "bottom temperature", "bottom_temp", name)) %>%
tidyr::pivot_wider(names_from = name,
values_from = val)
cor_dat %>%
cor_plt(x = "bottom_temp",
y = "log_recruit_devs",
color = "year",
ylab = "Log recritment deviation",
xlab = "Winter bottom temperature")
ggplot2::ggsave(here::here("images", paste0(Sys.Date(), "temp_x_rec2.png")),
width = 5, height = 6)
test_cor(data = cor_dat,
x = "bottom_temp",
y1 = "log_recruit_devs",
alt = "two.sided")
rbind(rec,
dat2 %>%
dplyr::rename(region = name) %>%
dplyr::mutate(name = "bottom temperature"))
df_cog_spring %>%
dplyr::filter(variable == "Northings") %>%
ggplot2::ggplot(ggplot2::aes(x = year,
y = val,
fill = region,
color = region)) +
ggplot2::geom_ribbon(ggplot2::aes(ymin = val - 1.96*annual_sd,
ymax = val + 1.96*annual_sd),
alpha = 0.2,
color = NA) +
ggplot2::geom_point() +
ggplot2::geom_line() +
ggplot2::theme_bw(base_size = 16) +
ggplot2::ylab("Northings (km)")
ggplot2::ggsave(here::here("images", paste0(Sys.Date(), "_northings_ci.png")),
width = 8, height = 6)
df_cog_spring
