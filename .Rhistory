) +
ggplot2::geom_hline(ggplot2::aes(
yintercept = .data$mean
),
color = "darkgreen",
linetype = "dotted"
) +
ggplot2::geom_point() +
ggplot2::geom_path() +
# ggplot2::xlim(c(1989, 2024)) +
ggplot2::scale_x_continuous(breaks = c(1990, 2000, 2010, 2020, 2023),
limits = c(1989, 2024)) +
ggplot2::scale_y_continuous(labels = scales::comma) +
ggplot2::theme_classic(base_size = 16) +
ggplot2::theme(strip.text = ggplot2::element_text(size = 16),
axis.title = ggplot2::element_blank(),
axis.text.x = ggplot2::element_text(angle = 30,
hjust = 0.5),
aspect.ratio = 1/4)
return(plt)
}
plt_bsb(this_dat)
plt_bsb <- function(data) {
plt <- data |>
dplyr::group_by(INDICATOR_NAME) |>
dplyr::mutate(mean = mean(DATA_VALUE, na.rm = TRUE),
sd = sd(DATA_VALUE, na.rm = TRUE)) |>
ggplot2::ggplot(ggplot2::aes(x = YEAR,
y = DATA_VALUE
)) +
ggplot2::geom_hline(ggplot2::aes(
yintercept = .data$mean + .data$sd
),
color = "darkgreen",
linetype = "solid"
) +
ggplot2::geom_hline(ggplot2::aes(
yintercept = .data$mean - .data$sd
),
color = "darkgreen",
linetype = "solid"
) +
ggplot2::geom_hline(ggplot2::aes(
yintercept = .data$mean
),
color = "darkgreen",
linetype = "dotted"
) +
ggplot2::geom_point() +
ggplot2::geom_path() +
# ggplot2::xlim(c(1989, 2024)) +
ggplot2::scale_x_continuous(breaks = c(1990, 2000, 2010, 2020, 2023),
limits = c(1989, 2024)) +
ggplot2::scale_y_continuous(labels = scales::comma) +
ggplot2::theme_classic(base_size = 16) +
ggplot2::theme(strip.text = ggplot2::element_text(size = 16),
axis.title = ggplot2::element_blank(),
axis.text.x = ggplot2::element_text(angle = 30,
hjust = 1),
aspect.ratio = 1/4)
return(plt)
}
plt_bsb(this_dat)
## plot ----
for(i in unique(all_indicators$INDICATOR_NAME)) {
this_dat <- all_indicators |>
dplyr::filter(INDICATOR_NAME == i) |>
dplyr::arrange(YEAR)
fname <- here::here("images", paste0(i, "_", Sys.Date(), ".png"))
if(max(this_dat$DATA_VALUE, na.rm = TRUE) > 10^6) {
this_dat <- this_dat |>
dplyr::mutate(DATA_VALUE = ifelse(!is.na(DATA_VALUE), DATA_VALUE/10^6, DATA_VALUE),
INDICATOR_NAME = paste(INDICATOR_NAME, "millions"))
fname <-  here::here("images", paste0(i, "_millions_", Sys.Date(), ".png"))
}
print(fname)
fig <- plt_bsb(this_dat)
if(stringr::str_detect(i, "North")) {
fig <- fig +
ggplot2::labs(title = "North") +
ggplot2::theme(plot.title.position = "plot")
ggsave(fname,
width = 7,
height = 2)
} else if(stringr::str_detect(i, "South")) {
fig <- fig +
ggplot2::labs(title = "South") +
ggplot2::theme(plot.title.position = "plot")
ggsave(fname,
width = 7,
height = 2)
} else {
ggsave(fname,
width = 6,
height = 2)
}
}
com_indicators <- readxl::read_excel(here::here("data-raw/commercial_data/SOCIEOECONOMIC_COMMERCIAL_INDICATORS_FINAL.xls"))
all_indicators <- dplyr::bind_rows(
rec_indicators,
com_indicators,
swv,
temp_indicator
)
## plot ----
for(i in unique(all_indicators$INDICATOR_NAME)) {
this_dat <- all_indicators |>
dplyr::filter(INDICATOR_NAME == i) |>
dplyr::arrange(YEAR)
fname <- here::here("images", paste0(i, "_", Sys.Date(), ".png"))
if(max(this_dat$DATA_VALUE, na.rm = TRUE) > 10^6) {
this_dat <- this_dat |>
dplyr::mutate(DATA_VALUE = ifelse(!is.na(DATA_VALUE), DATA_VALUE/10^6, DATA_VALUE),
INDICATOR_NAME = paste(INDICATOR_NAME, "millions"))
fname <-  here::here("images", paste0(i, "_millions_", Sys.Date(), ".png"))
}
print(fname)
fig <- plt_bsb(this_dat)
if(stringr::str_detect(i, "North")) {
fig <- fig +
ggplot2::labs(title = "North") +
ggplot2::theme(plot.title.position = "plot")
ggsave(fname,
width = 7,
height = 2)
} else if(stringr::str_detect(i, "South")) {
fig <- fig +
ggplot2::labs(title = "South") +
ggplot2::theme(plot.title.position = "plot")
ggsave(fname,
width = 7,
height = 2)
} else {
ggsave(fname,
width = 6,
height = 2)
}
}
quarto install tinytex
install.packages('tinytex')
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = FALSE)
here::i_am("scripts/bsb_table_test.Rmd")
filepaths <- purrr::map(c("bt_facet.png",
"swv_facet.png",
"total_recreational_trips_n_millions_2025-02-18.png",
"total_recreational_landings_lbs_millions_2025-02-18.png",
"AVGVESREVperYr_BLACK_SEABASS_2023_DOLlb_2025-02-18.png",
"N_Commercial_Vessels_Landing_BLACK_SEABASS_2025-02-18.png"
),
~here::here("images", .x))
filepaths
data <- readxl::read_excel(here::here("data/test_table.xlsx")) |>
janitor::clean_names() |>
dplyr::mutate(figure = paste0('![](', here::here("images", time_series), ')'))
?kableExtra::column_spec
knitr::opts_chunk$set(echo = FALSE)
here::i_am("scripts/bsb_table_test.Rmd")
data <- readxl::read_excel(here::here("data/test_table.xlsx")) |>
janitor::clean_names() |>
dplyr::mutate(figure =  here::here("images", time_series)) |>
dplyr::select(-time_series)
tbl <- flextable::flextable(data[,1:3])
tbl <- flextable::compose(tbl,
i = 1:6,
j = 4,
vaue = flextable::as_image(data[4]))
tbl <- flextable::compose(tbl,
i = 1:6,
j = 4,
value = flextable::as_image(data[4]))
tbl <- flextable::flextable(data)
data <- readxl::read_excel(here::here("data/test_table.xlsx")) |>
janitor::clean_names() |>
dplyr::mutate(figure =  here::here("images", time_series)) |>
dplyr::select(-time_series)
tbl <- flextable::flextable(data)
tbl <- flextable::compose(tbl,
i = 1:6,
j = 4,
value = flextable::as_image(data[4]))
tbl
?as_image
tbl <- flextable::compose(tbl,
i = 1:6,
j = 4,
value = flextable::as_image(data[4],
width = 3))
tbl <- flextable::compose(tbl,
i = 1:6,
j = 4,
value = flextable::as_image(data[4],
width = 3,
guess_size = FALSE))
tbl <- flextable::compose(tbl,
i = 1:6,
j = 4,
value = flextable::as_image(data[,4],
width = 3,
guess_size = FALSE))
tbl <- flextable::compose(tbl,
i = 1:6,
j = 4,
value = flextable::as_image(data[,4],
width = 3,
height = 2,
guess_size = FALSE))
tbl <- flextable::flextable(data)
for(i in 1:6){
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_image(data[i,4],
width = 3,
height = 2,
guess_size = FALSE))
}
i
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_image(data[i,4],
width = 3,
height = 2,
guess_size = FALSE))
data <- readxl::read_excel(here::here("data/test_table.xlsx")) |>
janitor::clean_names() |>
dplyr::mutate(figure =  here::here("images", time_series)) |>
dplyr::select(-time_series)
small_dat <- data |>
dplyr::mutate(figure = NA)
tbl <- flextable::flextable(small_dat)
for(i in 1:6){
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_image(data[i,4],
width = 3,
height = 2,
guess_size = FALSE))
}
data[i,4]
data[i,4]
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_image(src = data[i,4],
width = 3,
height = 2,
guess_size = FALSE))
src = data[i,4]
c(src)
purrr::pluck(data[i,4])
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_image(src = c(data[i,4]),
width = 3,
height = 2,
guess_size = FALSE))
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_image(src = data$figure[i],
width = 3,
height = 2,
guess_size = FALSE))
data$figure[i]
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_image(src = here::here("images/bt_facet.png"),
width = 3,
height = 2,
guess_size = FALSE))
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_image(src = here::here("images/bt_facet.png"),
width = 3,
height = 2,
guess_size = FALSE))
tbl
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_paragraph(
flextable::as_image(src = here::here("images/bt_facet.png"),
width = 3,
height = 2,
guess_size = FALSE)))
tbl
for(i in 1:6){
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_paragraph(
flextable::as_image(src = data$figure[i],
width = 3,
height = 2,
guess_size = FALSE)))
}
tbl
for(i in 1:6){
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_paragraph(
flextable::as_image(src = data$figure[i],
width = 3,
# height = 2,
guess_size = FALSE)))
}
for(i in 1:6){
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_paragraph(
flextable::as_image(src = data$figure[i],
width = 3,
height = data$h[i],
guess_size = FALSE)))
}
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_paragraph(
flextable::as_image(src = data$figure[i],
width = data$w[i],
height = data$h[i],
guess_size = FALSE)))
data <- readxl::read_excel(here::here("data/test_table.xlsx")) |>
janitor::clean_names() |>
dplyr::mutate(figure =  here::here("images", time_series)) |>
dplyr::select(-time_series)
small_dat <- data |>
dplyr::mutate(figure = NA)
tbl <- flextable::flextable(small_dat)
for(i in 1:6){
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_paragraph(
flextable::as_image(src = data$figure[i],
width = data$w[i],
height = data$h[i],
guess_size = FALSE)))
}
data
data <- readxl::read_excel(here::here("data/test_table.xlsx")) |>
janitor::clean_names() |>
dplyr::mutate(figure =  here::here("images", time_series)) |>
dplyr::select(-time_series)
data
data <- readxl::read_excel(here::here("data/test_table.xlsx")) |>
janitor::clean_names() |>
dplyr::mutate(figure =  here::here("images", time_series)) |>
dplyr::select(-time_series)
data
small_dat <- data |>
dplyr::mutate(figure = NA)
tbl <- flextable::flextable(small_dat)
for(i in 1:6){
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_paragraph(
flextable::as_image(src = data$figure[i],
width = data$w[i],
height = data$h[i],
guess_size = FALSE)))
}
tbl
tbl <- flextable::width(tbl, j = 1:4, width = c(1, 1, 3, 3))
tbl
tbl
small_dat <- data |>
dplyr::mutate(figure = NA) |>
dplyr::select(-c(w, h))
tbl <- flextable::flextable(small_dat)
tbl <- flextable::width(tbl, j = 1:4, width = c(1, 1, 3, 3))
for(i in 1:6){
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_paragraph(
flextable::as_image(src = data$figure[i],
width = data$w[i],
height = data$h[i],
guess_size = FALSE)))
}
tbl
tbl
small_dat <- data |>
dplyr::mutate(figure = NA) |>
dplyr::select(-c(w, h))
tbl <- flextable::flextable(small_dat)
tbl <- flextable::width(tbl, j = 1:4, width = c(1, 1, 3, 3))
tbl <- flextable::theme_box(tbl)
for(i in 1:6){
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_paragraph(
flextable::as_image(src = data$figure[i],
width = data$w[i],
height = data$h[i],
guess_size = FALSE)))
}
tbl
flextable::save_as_image(tbl, path = here::here("images/flextable_test.png"))
install.packages("magick")
install.packages("tinytext")
install.packages("tinytex")
install.packages("officer")
knitr::opts_chunk$set(echo = FALSE)
here::i_am("scripts/bsb_table_test.Rmd")
data <- readxl::read_excel(here::here("data/test_table.xlsx")) |>
janitor::clean_names() |>
dplyr::mutate(figure = paste0('![](', here::here("images", time_series), ')')) |>
dplyr::select(-c(w, h, time_series))
knitr::kable(data) |>
kableExtra::column_spec(1, width = "1in") |>
kableExtra::column_spec(2, width = "1in") |>
kableExtra::column_spec(3, width = "3in") |>
kableExtra::column_spec(4, width = "3in") |>
kableExtra::kable_styling(bootstrap_options = c("bordered"))
data <- readxl::read_excel(here::here("data/test_table.xlsx")) |>
janitor::clean_names() |>
dplyr::mutate(figure =  here::here("images", time_series)) |>
dplyr::select(-time_series)
small_dat <- data |>
dplyr::mutate(figure = NA) |>
dplyr::select(-c(w, h))
tbl <- flextable::flextable(small_dat)
tbl <- flextable::width(tbl, j = 1:4, width = c(1, 1, 3, 3))
tbl <- flextable::theme_box(tbl)
for(i in 1:6){
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_paragraph(
flextable::as_image(src = data$figure[i],
width = data$w[i]*1.25,
height = data$h[i]*1.25,
unit = "in",
guess_size = FALSE)))
}
tbl
# flextable::save_as_image(tbl, path = here::here("images/flextable_test.png"))
# needs magick installed to work
flextable::save_as_pptx(tbl, path = here::here("docs/flextable_test.pptx"))
install.packages("officer")
install.packages("officer")
knitr::opts_chunk$set(echo = FALSE)
here::i_am("scripts/bsb_table_test.Rmd")
officer::ph_with(ppt, value = tbl)
?officer::ph_with
install.packages("officedown")
flextable::get_flextable_defaults()
?set_flextable_defaults
?flextable::theme_box
small_dat <- data |>
dplyr::mutate(figure = NA) |>
dplyr::select(-c(w, h))
tbl <- flextable::flextable(small_dat)
tbl <- flextable::width(tbl, j = 1:4, width = c(0.75, 0.75, 2.3, 3.2))
tbl <- flextable::theme_box(tbl)
for(i in 1:6){
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_paragraph(
flextable::as_image(src = data$figure[i],
width = data$w[i],
height = data$h[i],
unit = "in",
guess_size = FALSE)))
}
flextable::set_flextable_defaults(font.size = 10)
tbl
# flextable::save_as_image(tbl, path = here::here("images/flextable_test.png"))
# needs magick installed to work
# flextable::save_as_pptx(tbl, path = here::here("docs/flextable_test.pptx"))
# officer::ph_with(ppt, value = tbl)
small_dat <- data |>
dplyr::mutate(figure = NA) |>
dplyr::select(-c(w, h))
flextable::set_flextable_defaults(font.family = "Arial",
font.size = 10)
tbl <- flextable::flextable(small_dat)
tbl <- flextable::width(tbl, j = 1:4, width = c(0.75, 0.75, 2.3, 3.2))
tbl <- flextable::theme_box(tbl)
for(i in 1:6){
tbl <- flextable::compose(tbl,
i = i,
j = 4,
value = flextable::as_paragraph(
flextable::as_image(src = data$figure[i],
width = data$w[i],
height = data$h[i],
unit = "in",
guess_size = FALSE)))
}
tbl
# flextable::save_as_image(tbl, path = here::here("images/flextable_test.png"))
# needs magick installed to work
# flextable::save_as_pptx(tbl, path = here::here("docs/flextable_test.pptx"))
# officer::ph_with(ppt, value = tbl)
remove.packages("tinytex")
install.packages("tinytex")
3/7.5
